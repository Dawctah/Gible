@page "/"
@rendermode InteractiveServer
@using Gible.Domain.Models
@using Knox.Mediation
@using Gible.Domain.Queries
@using Knox.Monads
@using Knox.Extensions

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

@foreach (var (key, name) in Recipes)
{
    <a class="btn btn-link" href="/recipe/@key">@name</a>
}


@code{
    public string MyString { get; private set; } = ":wooloo:";

    [Inject]
    protected IMediator Mediator { get; set; } = default!;

    public IEnumerable<(string key, string name)> Recipes { get; private set; } = [];

    private async Task DoThing()
    {
        var result = await Mediator.RequestResponseAsync<GetRecipesWithTagsQuery, IEnumerable<Recipe>>(new GetRecipesWithTagsQuery(new List<string>(){ "Onion" }));
        MyString = result.WrapFirst().UnwrapOrExchange(Recipe.Default).Name;
    }

    protected async override Task OnInitializedAsync()
    {
        var result = await Mediator.RequestResponseAsync<GetAllRecipesQuery, IEnumerable<Recipe>>(new GetAllRecipesQuery());
        Recipes = result.Select(recipe => (recipe.Key, recipe.Name));
    }
}